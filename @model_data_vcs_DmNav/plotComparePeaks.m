function a_p = plotComparePeaks(a_md, title_str, props)

% plotComparePeaks - Plot I/V curves comparing model and data.
%
% Usage:
% a_p = plotComparePeaks(a_md, title_str, props)
%
% Parameters:
%   a_md: A model_data_vcs_DmNav object.
%   title_str: (Optional) Text to appear in the plot title.
%   props: A structure with any optional properties.
%     quiet: If 1, only use given title_str.
%     skipStep: Number of voltage steps to skip at the start (default=0).
%		
% Returns:
%   a_p: A plot_abstract object.
%
% Description:
%
% Example:
% >> a_md = model_data_vcs_DmNav(model, data_vc)
% >> plotFigure(plotComparePeaks(a_md, 'I/V curves'))
%
% See also: model_data_vcs_DmNav, voltage_clamp, plot_abstract, plotFigure
%
% $Id$
%
% Author: Cengiz Gunay <cgunay@emory.edu>, 2010/10/11

if ~ exist('props', 'var')
  props = struct;
end

if ~ exist('title_str', 'var')
  title_str = '';
end

if isfield(props, 'quiet')
  all_title = title_str;
else
  all_title = [' IV act, steady, inact; data vs model' title_str ];
end

% modify time steps since all peaks are calculated using calcCurPeaks here
if isfield(props, 'skipStep')
% $$$   a_md.model_vc.time_steps = a_md.model_vc.time_steps(props.skipStep:end);
% $$$   a_md.data_vc.time_steps = a_md.data_vc.time_steps(props.skipStep:end);
else
  props.skipStep = 0;
end

% plot comparison of data and model peaks 
a_p = ...
    plot_superpose({...
      plotSteadyIV(calcCurPeaks(a_md.data_vc, 2 + props.skipStep, ...
                                struct('pulseEndRel', [1 + props.skipStep 10])), 2 + props.skipStep, ...
                   all_title, ...
                   struct('noTitle', 1, ...
                          'grid', 1, 'label', 'act', 'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Marker', '+', 'LineStyle', 'none', 'Color', 'b'))), ...
      plotSteadyIV(calcCurPeaks(a_md.model_vc, 2 + props.skipStep, ...
                                struct('pulseStartRel', [1 + props.skipStep .1], 'pulseEndRel', [1 + props.skipStep 10])), ...
                   2 + props.skipStep, '', ...
                   struct('noTitle', 1, ...
                          'label', 'act (model)', 'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Color', 'b'))), ... 
      plotSteadyIV(calcCurPeaks(a_md.data_vc, 2 + props.skipStep, ...
                                struct('pulseStartRel', [2 + props.skipStep -30])), 2 + props.skipStep, '', ...
                   struct('noTitle', 1, ...
                          'grid', 1, 'label', 'act-end', 'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Marker', 'o', 'LineStyle', 'none', 'Color', 'r'))), ...
      plotSteadyIV(calcCurPeaks(a_md.model_vc, 2 + props.skipStep, struct('pulseStartRel', [2 + props.skipStep -30])), ...
                   2 + props.skipStep, '', ...
                   struct('noTitle', 1, ...
                          'label', 'act-end (model)', 'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Color', 'r'))), ...
      plotSteadyIV(calcCurPeaks(a_md.data_vc, 3 + props.skipStep, ...
                                struct('pulseStartRel', [2 + props.skipStep .5], 'pulseEndRel', [2 + props.skipStep 10])), ...
                   2 + props.skipStep, '', ...
                   struct('noTitle', 1, ...
                          'grid', 1, 'label', 'inact', ...
                          'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Marker', 'x', 'LineStyle', 'none', 'Color', 'g'))), ...
      plotSteadyIV(calcCurPeaks(a_md.model_vc, 3 + props.skipStep, ...
                                struct('pulseStartRel', [2 + props.skipStep .1], 'pulseEndRel', [2 + props.skipStep 10])), ...
                   2 + props.skipStep, '', ...
                   struct('noTitle', 1, ...
                          'label', 'inact (model)', ...
                          'plotPeaks', 1, ...
                          'plotProps', ...
                          struct('Color', 'g')))}, ...
                   {}, '', ...
                   struct('noCombine', 1, ...
                          'fixedSize', [2.5 2]));
